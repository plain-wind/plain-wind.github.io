[{"title":"sass","path":"/2025/07/27/sass/","content":"sass安装$ npm install -g sass sass编译$ sass [input.scss] [output.css] # 可选参数# -w 监听模式，自动编译# --no-source-map 不生成源码地图 sass语法变量$color-red: red;$color-blue: blue;body background-color: $color-red; // background-color: red; 嵌套.container // .container .box .box background-color: $color-red; // 指代当前选择器，即 .container :hover color: $color-blue; 导入// @import style.scss;@import base; // .scss 后缀名可省略@use base; 混合// @mixin name(...args) ... @mixin font font-size: 14px; font-weight: bold; color: $color-red; font-family: 微软雅黑;/** .container font-size: 14px; font-weight: bold; color: red; font-family: 微软雅黑; */.container @include font; 继承// @extend name.container box-sizing: border-box; display: flex; flex-direction: column;/** .container-item box-sizing: border-box; display: flex; flex-direction: column; */.container-item @extend container; 注意：关于混合和继承的使用 @mixin 本质是代码片段的复制 可以传递参数 用于动态调整样式 @extend 本质是选择器合并 对于多个类引入相同样式 @extend相较于@mixin编译出的css代码更简洁 占位符// %name 占位符中的样式不会编译到 css 中%placeholder 插值// #$value$shadow: #random(100)vw #random(100)vh #fff; 函数颜色函数$color: red;body // 修改的是 HSL色彩模式中的亮度 background-color: lighten($color, 10%); background-color: darken($color, 10%); 数学函数$number: random($n); // 生成0-$n的随机数 字符串函数$content: unquote($string); // 去除引号$content: quote($string); // 添加引号 条件@if ... @else if ... @else ... 循环// for循环 through包含结束值 to不包含结束值@for $variable from $start through $end ... @for $variable from $start to $end ... demo星空星空样例 源代码 body background-color: #1b1a1a;.content position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); color: #fff; font-size: 40px; font-weight: 300; letter-spacing: 10px; font-family: Microsoft YaHei, sans-serif; // 字体渐变 background: linear-gradient(to bottom, #e9e4e4, #464444); -webkit-background-clip: text; background-clip: text; -webkit-text-fill-color: transparent; color: transparent;// 创建阴影，即星空中的星星@function createShadow($n) $shadow: #random(100)vw #random(100)vh #fff; @for $i from 2 through $n $shadow: #$shadow, #random(100)vw #random(100)vh #fff; // 去除引号 @return unquote($shadow);// 设置基准数量和时间$count: 1000;$time: 400;@for $i from 1 through 3 $count: floor($count / 2); $time: floor($time / 2); .layout#$i $size: #$ipx; position: absolute; top: 0; left: 0; width: $size; height: $size; border-radius: 50%; box-shadow: createShadow($count); animation: moveUp #$times linear infinite; // 创建子元素，实现无缝衔接 ::after content: ; position: absolute; top: 100vh; left: 0; width: inherit; height: inherit; border-radius: inherit; box-shadow: inherit; @keyframes moveUp 100% transform: translateY(-100vh);","tags":["sass","css","前端","postCSS","前端工程化"]},{"title":"hexo相关配置","path":"/2025/07/25/hexo相关配置/","content":"hexo初始化# 安装hexo-cli$ npm install -g hexo-cli# 初始化博客$ hexo init blog# 进入博客目录$ cd blog# 安装依赖$ npm install# 启动服务$ hexo server 发布到github 在github上创建一个仓库，仓库名称为username.github.io 博客目录下修改_config.yml文件，添加以下内容： deploy: type: git repo: https://github.com/username/username.github.io.git 首次部署需要输入github的账号密码 部署成功后，在浏览器中访问https://username.github.io即可看到博客 主题配置 官网主题 我选用的主题stellar hexo插件# 修改文件后浏览器自动刷新$ npm install --save-dev hexo-browsersync hexo常用命令# 新建文章$ hexo new 文章标题# 生成静态文件$ hexo generate# 启动服务$ hexo server# 部署$ hexo deploy# 清理$ hexo clean# 帮助$ hexo help# 列出所有文章$ hexo list 相关链接 hexo官网 hexo主题 hexo插件 hexo配置 hexo命令 我选用的主题stellar","tags":["hexo"],"categories":["博客"]},{"path":"/demo/starlit-sky/index.html","content":"Sass星空 Sass星空"}]